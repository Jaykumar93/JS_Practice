
2 + 23;
32 - 2;
23 * 43;
500 / 2;


10.90 * 2 + 20.95 + 4.99;

//  + and - have same priority so it goes from left to right
//  same goes for * and /

20.95 + 7.99

    (20.95 + 7.99) * 0.1

12.1234 + 43


Math.round(1.232);

Math.round(23.64);

Math.round((2095 + 799) * 0.1) / 100

    // Excercise

    // 2a
    (10 + (3 * 8) + (1 * 5))

    // 2b
    (10 + (3 * 8) + (1 * 5)) / 3

        // 2c
        (18.5 + (2 * 7.5))


        // 2d
        (18.5 + (2 * 7.5)) * (10 / 100)

        // 2e
        (18.5 + (2 * 7.5)) * (20 / 100)

            //2f
            ((2095 + 799 + 1899) / 100)

        // 2g)
        ((2095 + 799 + 1899 + 499) / 100)

// 2h)
Math.round(((2095 + 799 + 1899 + 499) * 0.1) / 100)

    // 2i)
    (2095 + 799 + 1899 + 499) / 100 + (Math.round((2095 + 799 + 1899 + 499) * 0.1) / 100)

// 2j)
Math.floor(2.8)

// 2k)
Math.ceil(2.2)

    // 2l)
    (25 * (9 / 5)) + 32

        // 2m)
        (86 - 32) * (5 / 9)

        // 2n)
        (-5 * (9 / 5)) + 32